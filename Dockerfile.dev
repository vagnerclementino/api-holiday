# Multi-stage Dockerfile for development - builds from source without requiring local Java
# Stage 1: Build stage with Maven and OpenJDK 24
FROM openjdk:24-jdk-slim AS maven-builder

# Metadata
LABEL maintainer="Holiday API Team"
LABEL description="Holiday API Build Stage - OpenJDK 24 with Maven"
LABEL stage="build"

# Install build dependencies
RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        curl \
        tar \
        gzip \
        git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Maven 3.9.11
RUN curl -fsSL https://archive.apache.org/dist/maven/maven-3/3.9.11/binaries/apache-maven-3.9.11-bin.tar.gz \
    | tar -xzC /opt && \
    mv /opt/apache-maven-3.9.11 /opt/maven && \
    chmod +x /opt/maven/bin/mvn

# Add Maven to PATH
ENV PATH="/opt/maven/bin:${PATH}"

# Create app user and group
RUN groupadd -r app && useradd -r -g app app

# Set working directory
WORKDIR /home/app

# Copy Maven wrapper and POM first (for better layer caching)
COPY mvnw mvnw.cmd pom.xml ./
COPY .mvn/ .mvn/

# Make Maven wrapper executable
RUN chmod +x mvnw

# Download dependencies (this layer will be cached unless pom.xml changes)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY src/ src/

# Build the application
RUN ./mvnw clean package -DskipTests -B && \
    echo "Build completed successfully!" && \
    ls -la target/

# Stage 2: Runtime stage - Final optimized image
FROM openjdk:24-jdk-slim

# Metadata for final image
LABEL maintainer="Holiday API Team"
LABEL description="Holiday API with OpenJDK 24 and Spring Boot 3.5.4 - Development Build"
LABEL version="1.0-dev"
LABEL java.version="24"
LABEL spring.boot.version="3.5.4"

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y ca-certificates && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create app user and group (non-root for security)
RUN groupadd -r app && useradd -r -g app app

# Set working directory
WORKDIR /home/app

# Copy the built JAR from build stage
COPY --from=maven-builder /home/app/target/holiday-api-*.jar app.jar

# Change ownership to app user
RUN chown -R app:app /home/app

# Switch to non-root user for security
USER app

# Expose the application port
EXPOSE 8080

# JVM optimization for containerized environments
ENV JAVA_OPTS="-Xmx512m -Xms256m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

# Enable preview features for Java 24
ENV JAVA_TOOL_OPTIONS="--enable-preview"

# Set Spring profile for development
ENV SPRING_PROFILES_ACTIVE=local

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS $JAVA_TOOL_OPTIONS -jar app.jar"]
